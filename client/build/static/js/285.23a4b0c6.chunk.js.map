{"version":3,"file":"static/js/285.23a4b0c6.chunk.js","mappings":"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","sources":["components/Users/Profile.jsx"],"sourcesContent":["import React, {useEffect, useRef} from 'react';\r\nimport {GetProfileDetails, ProfileUpdateRequest} from \"../../APIRequest/UsersAPI\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {ErrorToast, getBase64, IsEmail, IsEmpty, IsMobile} from \"../../helper/FromHelper\";\r\n\r\nconst Profile = () => {\r\n\r\n    let emailRef, firstNameRef, lastNameRef, mobileRef, passwordRef, userImagRef, userImgView = useRef();\r\n\r\n\r\n    useEffect(()=> {\r\n        (async ()=>{\r\n            await GetProfileDetails()\r\n        })();\r\n    },[])\r\n\r\n    const ProfileData = useSelector((state)=> state.profile.value);\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const PreviewImage = () =>{\r\n        let ImgFile = userImagRef.files[0];\r\n        getBase64(ImgFile).then((base64Img) =>{\r\n            userImgView.src = base64Img;\r\n        })\r\n    }\r\n\r\n    const UpdateMyProfile = async () =>{\r\n        let email = emailRef.value;\r\n        let firstName = firstNameRef.value;\r\n        let lastName = lastNameRef.value;\r\n        let mobile = mobileRef.value;\r\n        let password = passwordRef.value;\r\n        let photo = userImgView.src;\r\n\r\n\r\n        if (IsEmail(email)){\r\n            ErrorToast(\"valid Email Address Required!\")\r\n        }else if (IsEmpty(firstName)){\r\n            ErrorToast(\"First Name Required !\")\r\n        } else if (IsEmpty(lastName)) {\r\n            ErrorToast(\"Last Name Required !\")\r\n        } else if (!IsMobile(mobile)) {\r\n            ErrorToast(\"Valid Mobile  Required !\")\r\n        } else if (IsEmpty(password)) {\r\n            ErrorToast(\"Password Required !\")\r\n        }else{\r\n            let result = await ProfileUpdateRequest(email, firstName, lastName, mobile, password, photo)\r\n            if (result === true){\r\n                navigate(\"/\")\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row d-flex justify-content-center\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"container-fluid\">\r\n                                <img ref={(input)=>userImgView=input}  className=\"icon-nav-img-lg\" src={ProfileData['photo']} alt=\"\"/>\r\n                                <hr/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4 p-2\">\r\n                                        <label>Profile Picture</label>\r\n                                        <input onChange={PreviewImage} ref={(input)=>userImagRef=input} placeholder=\"User Email\" className=\"form-control animated fadeInUp\" type=\"file\"/>\r\n                                    </div>\r\n                                    <div className=\"col-4 p-2\">\r\n                                        <label>Email Address</label>\r\n                                        <input key={Date.now()} defaultValue={ProfileData['email']} readOnly={true}  ref={(input)=>emailRef=input} placeholder=\"User Email\" className=\"form-control animated fadeInUp\" type=\"email\"/>\r\n                                    </div>\r\n                                    <div className=\"col-4 p-2\">\r\n                                        <label>First Name</label>\r\n                                        <input  key={Date.now()} defaultValue={ProfileData['firstName']} ref={(input)=>firstNameRef=input} placeholder=\"First Name\" className=\"form-control animated fadeInUp\" type=\"text\"/>\r\n                                    </div>\r\n                                    <div className=\"col-4 p-2\">\r\n                                        <label>Last Name</label>\r\n                                        <input key={Date.now()} defaultValue={ProfileData['lastName']}  ref={(input)=>lastNameRef=input} placeholder=\"Last Name\" className=\"form-control animated fadeInUp\" type=\"text\"/>\r\n                                    </div>\r\n                                    <div className=\"col-4 p-2\">\r\n                                        <label>Mobile</label>\r\n                                        <input key={Date.now()} defaultValue={ProfileData['mobile']} ref={(input)=>mobileRef=input} placeholder=\"Mobile\" className=\"form-control animated fadeInUp\" type=\"mobile\"/>\r\n                                    </div>\r\n                                    <div className=\"col-4 p-2\">\r\n                                        <label>Password</label>\r\n                                        <input key={Date.now()} defaultValue={ProfileData['password']}  ref={(input)=>passwordRef=input} placeholder=\"User Password\" className=\"form-control animated fadeInUp\" type=\"password\"/>\r\n                                    </div>\r\n                                    <div className=\"col-4 p-2\">\r\n                                        <button onClick={UpdateMyProfile}  className=\"w-100  btn btn-success\">Update</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;"],"names":["emailRef","firstNameRef","lastNameRef","mobileRef","passwordRef","userImagRef","userImgView","useRef","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","GetProfileDetails","stop","ProfileData","useSelector","state","profile","value","navigate","useNavigate","UpdateMyProfile","_ref2","_callee2","email","firstName","lastName","mobile","password","photo","_context2","src","IsEmail","ErrorToast","IsEmpty","IsMobile","ProfileUpdateRequest","sent","apply","arguments","_jsx","className","children","_jsxs","ref","input","alt","onChange","ImgFile","files","getBase64","then","base64Img","placeholder","type","defaultValue","readOnly","Date","now","onClick"],"sourceRoot":""}